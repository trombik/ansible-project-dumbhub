---

# __________________________________________ntopng
project_ntopng_interface: "{{ project_bridge_interface }}"
project_ntopng_listen_address: "{{ project_internal_ipv4_address }}"
os_ntopng_extra_packages:
  FreeBSD: []
  OpenBSD: []
  Debian:
    - pfring
    - ntopng-data
    - net-tools
  RedHat:
    - pfring
    - ntopng-data
    - net-tools
ntopng_extra_packages: "{{ os_ntopng_extra_packages[ansible_os_family] }}"
ntopng_config: |
  {% if ansible_os_family == 'Debian' %}
  -e=
  --data-dir={{ ntopng_db_dir }}
  --user={{ ntopng_user }}
  {% endif %}
  --http-port={{ project_ntopng_listen_address }}:3000
  --disable-autologout
  --disable-login={{ project_ntopng_disable_login }}
  --community
  --interface={{ project_ntopng_interface }}

# __________________________________________argus
project_argus_interface: "{{ project_bridge_interface }}"
os_argus_flags:
  OpenBSD: "-F {{ argus_config_file }}"
  FreeBSD: |
    argus_flags='-F {{ argus_config_file }}'
    argus_pidfile='/var/run/argus.{{ ansible_default_ipv4.device | default(omit) }}.*.pid'
  Debian: |
    ARGUS_OPTIONS="-F {{ argus_config_file }}"
  RedHat: |
    ARGUS_OPTIONS="-F {{ argus_config_file }}"
argus_flags: "{{ os_argus_flags[ansible_os_family] }}"
argus_config: |
  ARGUS_FLOW_TYPE="Bidirectional"
  ARGUS_FLOW_KEY="CLASSIC_5_TUPLE"
  ARGUS_ACCESS_PORT=561
  ARGUS_BIND_IP="127.0.0.1"
  ARGUS_INTERFACE={{ project_argus_interface }}
  ARGUS_GO_PROMISCUOUS=yes
  ARGUS_SETUSER_ID={{ argus_user }}
  ARGUS_SETGROUP_ID={{ argus_group }}
  ARGUS_FLOW_STATUS_INTERVAL=60
  ARGUS_MAR_STATUS_INTERVAL=300
  ARGUS_DEBUG_LEVEL=1
  ARGUS_FILTER="ip"
  ARGUS_SET_PID=yes
  ARGUS_PID_PATH=/var/run
  {% if ansible_os_family == 'FreeBSD' or ansible_os_family == 'OpenBSD' %}
  # XXX enable only if ansible_os_family is either FreeBSD or OpenBSD.
  # Ubuntu package is built without SASL (Build without sasl for now)
  # http://changelogs.ubuntu.com/changelogs/pool/universe/a/argus/argus_3.0.8.2-1/changelog
  ARGUS_MIN_SSF=40
  ARGUS_MAX_SSF=128
  {% endif %}
  {% if ansible_os_family != 'Debian' and ansible_os_family != 'RedHat' %}
  # XXX the unit file expects the command not to fork
  ARGUS_DAEMON=yes
  {% endif %}
os_rastream_flags:
  OpenBSD: ""
  FreeBSD: ""
  Debian: |
    RASTREAM_OPTIONS="-S 127.0.0.1 -M time 1h -w {{ rastream_log_dir }}/%Y/%m/%d/%H.%M.%S.ra"
  RedHat: |
    RASTREAM_OPTIONS="-S 127.0.0.1 -M time 1h -w {{ rastream_log_dir }}/%Y/%m/%d/%H.%M.%S.ra"
rastream_flags: "{{ os_rastream_flags[ansible_os_family] }}"
rastream_package: ""
rastream_user: "{{ argus_user }}"
rastream_group: "{{ argus_group }}"
rastream_log_dir: "{{ argus_log_dir }}/rastream"

# __________________________________________net-snmp
project_net_snmp_listen_address: "{{ project_internal_ipv4_address }}"
os_net_snmp_extra_packages:
  FreeBSD: []
  OpenBSD: []
  Debian:
    - snmp
    - snmp-mibs-downloader
  RedHat:
    - net-snmp-utils
net_snmp_extra_packages: "{{ os_net_snmp_extra_packages[ansible_os_family] }}"
os_net_snmp_flags:
  FreeBSD: |
    snmpd_flags="-a"
    snmpd_conffile="{{ net_snmp_config_file }}"
  OpenBSD: "-u _netsnmp -r -a"
  Debian: |
    MIBSDIR=/usr/share/snmp/mibs:/usr/share/snmp/mibs/iana:/usr/share/snmp/mibs/ietf:/usr/share/mibs/site:/usr/share/snmp/mibs:/usr/share/mibs/iana:/usr/share/mibs/ietf:/usr/share/mibs/netsnmp
    MIB=""
  RedHat: |
    OPTIONS="-LS0-6d"

net_snmp_flags: "{{ os_net_snmp_flags[ansible_os_family] }}"
net_snmp_config: |
  syscontact root
  syslocation "somewhere"
  rocommunity public
  agentAddress  udp:{{ project_net_snmp_listen_address }}:161
  mibs :
net_snmp_snmptrapd_service_enable: no

# __________________________________________dumpcap
project_dumpcap_interface: "{{ project_bridge_interface }}"
os_dumpcap_flags:
  # translation: write output to files with ring buffer mode, 10 files,
  # 60 sec per file. capture filiter is `ip`. the output files should be
  # group-readable. do not display the continuous count of packets.
  # output file name is `/var/log/dumpcap/dumpcap_00001_20190714120117
  OpenBSD: "-b interval:60 -b files:10 -f ip -g -i {{ project_dumpcap_interface }} -q -w {{ dumpcap_log_dir }}/dumpcap"
  FreeBSD: |
    dumpcap_user='{{ dumpcap_user }}'
    dumpcap_args='-b interval:60 -b files:10 -f ip -g -i {{ project_dumpcap_interface }} -q -w {{ dumpcap_log_dir }}/dumpcap'
  Debian: |
    DUMPCAP_FLAGS='-b interval:60 -b files:10 -f ip -g -i {{ project_dumpcap_interface }} -q -w {{ dumpcap_log_dir }}/dumpcap'
  RedHat: ""
dumpcap_flags: "{{ os_dumpcap_flags[ansible_os_family] }}"

os_dumpcap_extra_package:
  OpenBSD: []
  FreeBSD: []
  Debian:
    - tshark
  RedHat: []
dumpcap_extra_packages: "{{ os_dumpcap_extra_package[ansible_os_family] }}"

# __________________________________________squid
project_squid_listen_address: "{{ project_internal_ipv4_address }}"
os_squid_flags:
  FreeBSD: |
    squid_flags="-u 3180"
  OpenBSD: "-u 3180"
  Debian: |
    SQUID_ARGS="-YC -f $CONFIG -u 3180"
  RedHat: |
    SQUID_OPTS="-u 3180"
    SQUID_SHUTDOWN_TIMEOUT=100
    SQUID_CONF="{{ squid_conf_file }}"
squid_flags: "{{ os_squid_flags[ansible_os_family] }}"
squid_config: |
  acl localnet src 10.0.0.0/8
  acl localnet src 172.16.0.0/12
  acl localnet src 192.168.0.0/16
  acl localnet src fc00::/7
  acl localnet src fe80::/10
  acl SSL_ports port 443
  acl Safe_ports port 80
  acl Safe_ports port 21
  acl Safe_ports port 443
  acl CONNECT method CONNECT
  http_port {{ project_squid_listen_address }}:3128
  http_access deny !Safe_ports
  http_access deny CONNECT !SSL_ports
  http_access allow localhost manager
  http_access deny manager
  http_access deny to_localhost
  http_access allow localnet
  http_access allow localhost
  http_access deny all
  http_port 3128
  cache_dir ufs {{ squid_cache_dir }} 100 16 256
  coredump_dir {{ squid_coredump_dir }}
squid_selinux_port_udp: [3401, 4827, 3180]

# __________________________________________repositories
apt_repo_keys_to_add:
  - http://packages.ntop.org/apt-stable/ntop.key
apt_repo_to_add:
  - deb http://packages.ntop.org/apt-stable/{{ ansible_distribution_version }}/ x64/
  - deb http://packages.ntop.org/apt-stable/{{ ansible_distribution_version }}/ all/
redhat_repo_extra_packages:
  - epel-release
redhat_repo:
  epel:
    mirrorlist: "http://mirrors.fedoraproject.org/mirrorlist?repo=epel-{{ ansible_distribution_major_version }}&arch={{ ansible_architecture }}"
    gpgcheck: yes
    enabled: yes
  ntop:
    baseurl: http://packages.ntop.org/centos-stable/$releasever/$basearch/
    enabled: yes
    gpgcheck: yes
    gpgkey: http://packages.ntop.org/centos-stable/RPM-GPG-KEY-deri
  ntop_noarch:
    baseurl: http://packages.ntop.org/centos-stable/$releasever/noarch/
    enabled: yes
    gpgcheck: yes
    gpgkey: http://packages.ntop.org/centos-stable/RPM-GPG-KEY-deri

# __________________________________________bridge

# use netplan on Linux platforms
netplan_config: "{{ project_netplan_config }}"
netplan_force_flush_handlers: yes
